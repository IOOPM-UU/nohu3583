# Compiler and flags
CC      = gcc
CFLAGS  = -Wall -Wextra -pedantic -std=c11 -g
LDFLAGS = -lcunit

# Targets
TARGET  = unit_test
OBJS    = unit_test.o hash_table.o

# Default target: build the test executable
all: $(TARGET)

# Link step
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

# Compile step (pattern rule for .c -> .o)
%.o: %.c %.h
	$(CC) $(CFLAGS) -c $< -o $@

# Special case for unit_test.o (depends only on .c and hash_table.h)
unit_test.o: unit_test.c hash_table.h
	$(CC) $(CFLAGS) -c unit_test.c -o unit_test.o

# Run the tests
TTZm-eXtest: $(TARGET)
	./$(
T
ARGET)

# Memory test with valgrind
memtest: $(TARGET)
	valgrind --leak-check=full ./$(TARGET)

# Clean up build artifacts
clean:
	rm -f $(OBJS) $(TARGET)


